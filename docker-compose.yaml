version: '3.7'

services:
  api01: &api
    image: rochajg/rinhav2:latest
    hostname: api01
    container_name: api01
    restart: always
    ports:
      - "8081:8080"
    environment:
      POSTGRES_PASS: rinhav2
      POSTGRES_USER: rinhav2
      POSTGRES_DB: rinhav2
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.575"
          memory: "220MB"

  api02:
    <<: *api
    hostname: api02
    container_name: api02
    ports:
      - "8082:8080"

  nginx:
    image: nginx:stable-perl
    container_name: nginx
    restart: always
    volumes:
      - ./scripts/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api01:
        condition: service_healthy
      api02:
        condition: service_healthy
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "10MB"

  postgres:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: rinhav2
      POSTGRES_DB: rinhav2
      POSTGRES_USER: rinhav2
    volumes:
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./scripts/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "100MB"

networks:
  default:
    driver: bridge
    name: rinhav2
